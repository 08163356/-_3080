(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{495:function(v,_,t){"use strict";t.r(_);var s=t(7),r=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"一、操作符重载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、操作符重载"}},[v._v("#")]),v._v(" 一、操作符重载")]),v._v(" "),_("p",[v._v("问题：参数必须是类对象的常引用吗？")]),v._v(" "),_("p",[v._v("可以不使用引用，但会产生对象拷贝动作，降低效率")]),v._v(" "),_("p",[v._v("可以不是常引用，但是内部参数的值可能被修改。")]),v._v(" "),_("p",[v._v("可以使用指针，但与常规数学公式使用方式不符。操作符重载不传地址。")]),v._v(" "),_("p",[v._v("java中的反射机制和C++中的友元函数有什么区别")]),v._v(" "),_("p",[v._v("操作符重载的意义在哪儿？")]),v._v(" "),_("h4",{attrs:{id:"左值和右值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#左值和右值"}},[v._v("#")]),v._v(" "),_("strong",[v._v("左值和右值")])]),v._v(" "),_("p",[v._v("右值引用可以使用文字作为函数实际参数")]),v._v(" "),_("p",[v._v("传递文字作为实际参数，传递右值引用")]),v._v(" "),_("p",[v._v("具有右值引用作为左值，匿名右值引用作为右值")]),v._v(" "),_("p",[v._v("右值引用可以避免编写过多的构造与赋值函数")]),v._v(" "),_("p",[v._v("使用右值引用，通过函数模板可以缩减代码编写，可以实现完美转发，")]),v._v(" "),_("h4",{attrs:{id:"流操作符重载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#流操作符重载"}},[v._v("#")]),v._v(" "),_("strong",[v._v("流操作符重载")])]),v._v(" "),_("p",[_("strong",[v._v("流与文件")])]),v._v(" "),_("p",[v._v("所有单参数的流式操作符都是函子，C++库函数中预定义了很多操纵符")]),v._v(" "),_("p",[_("strong",[v._v("文件流")])]),v._v(" "),_("p",[v._v("包含头文件“fstream”")]),v._v(" "),_("p",[v._v("创建者：按照特定格式重载流操作符")]),v._v(" "),_("p",[v._v("使用者：创建文件流对象，输入输出。")]),v._v(" "),_("p",[_("strong",[v._v("数据持久化")])]),v._v(" "),_("p",[v._v("将数据保存在外部文件中，在程序运行时装入，在程序结束时重新写回文件")]),v._v(" "),_("p",[_("strong",[v._v("操作符重载原则")])]),v._v(" "),_("ul",[_("li",[v._v("只能使用已有的操作符号，不能创建新的操作符")]),v._v(" "),_("li",[v._v("操作符也是函数，重载遵循函数重载原则​：函数签名必须不一样。​")]),v._v(" "),_("li",[v._v("重载的操作符不能改变优先级和结合性，也不能改变操作个数和语法结构")]),v._v(" "),_("li",[v._v("重载的操作符不能改变其用于内部类型对象的含义，他只能和用户自定义类型的对象一起使用，或者用于用户自定义类型的对象和内部类型的对象混用")]),v._v(" "),_("li",[v._v("重载的操作符在功能上应与原有功能一致，即保持一致语义，形式上是统一的")])]),v._v(" "),_("p",[_("strong",[v._v("操作符号重载类型：成员函数或友元函数")])]),v._v(" "),_("ul",[_("li",[v._v("重载为类的成员函数：少一个参数（隐含this，标识二元表达式的左参数或者一元表达式的参数）")]),v._v(" "),_("li",[v._v("重载为类的友元函数：没有隐含this参数")])]),v._v(" "),_("p",[_("strong",[v._v("成员函数和友元函数")])]),v._v(" "),_("p",[v._v("一般全局常用操作符（关系操作符、逻辑操作符、流操作符）重载为友元函数，涉及对下个特殊运算的操作符重载为成员函数。")]),v._v(" "),_("p",[v._v("一般单目操作符重载为成员函数，双目操作符重载为友元函数（左右操作数使用更灵活）")]),v._v(" "),_("p",[v._v("部分双目操作符不能重载友元函数：“=”、“（）”、“[]”、“->”")]),v._v(" "),_("p",[v._v("类型转换操作符只能重载为成员函数")]),v._v(" "),_("p",[v._v("重载操作符参数一般采用引用形式，主要与数学运算协调。")]),v._v(" "),_("p",[_("img",{attrs:{src:"G:%5C%E7%85%A7%E7%89%87%5C%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%5C%E9%87%8D%E8%BD%BD%E5%8E%9F%E5%9E%8B%E6%8E%A8%E8%8D%90.png",alt:""}})]),v._v(" "),_("p",[v._v("位操作符重载不推荐，new操作符重载有时候相当有意义")]),v._v(" "),_("p",[v._v("需要频繁的开辟小数组时，全局的new和delete效率很低。一开始就申请一块内存区域，然后重载new操作符，在申请的缓冲池里面进行操作。从而提高系统的效率，甚至设置垃圾回收机制。大部分情况重载位成员函数更安全")]),v._v(" "),_("h3",{attrs:{id:"散装知识点、问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#散装知识点、问题"}},[v._v("#")]),v._v(" 散装知识点、问题")]),v._v(" "),_("p",[v._v("1.为什么要使用操作符重载啊？")]),v._v(" "),_("p",[v._v("2.this指针具体的含义")]),v._v(" "),_("p",[v._v("3.四则运算符重载有什么应用常合呢？")]),v._v(" "),_("p",[v._v("4.搭建VPN的软件：Dsr、Ssr、Ss、V2ray")]),v._v(" "),_("p",[v._v("5.C++的内存模型是什么呢？")]),v._v(" "),_("p",[v._v("6.匿名的枚举型是什么？")])])}),[],!1,null,null,null);_.default=r.exports}}]);