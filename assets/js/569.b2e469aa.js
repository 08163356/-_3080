(window.webpackJsonp=window.webpackJsonp||[]).push([[569],{907:function(s,a,t){"use strict";t.r(a);var e=t(7),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("​")]),s._v(" "),a("h2",{attrs:{id:"为什么要进行打包优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行打包优化"}},[s._v("#")]),s._v(" 为什么要进行打包优化")]),s._v(" "),a("p",[s._v("提高加载速度")]),s._v(" "),a("p",[s._v("提高编译速度")]),s._v(" "),a("p",[s._v("提高性能优化加载指标的速度")]),s._v(" "),a("h2",{attrs:{id:"打包优化的指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包优化的指标"}},[s._v("#")]),s._v(" 打包优化的指标")]),s._v(" "),a("p",[s._v("关于指标，这里简单介绍下常见的优化指标")]),s._v(" "),a("p",[s._v("FCP (First Contentful Paint)：「白屏时间」（第一个文本绘制时间)")]),s._v(" "),a("p",[s._v("Speed Index:「首屏时间」")]),s._v(" "),a("p",[s._v("TTI (Time To Interactive)：第一次可交互的时间")]),s._v(" "),a("p",[s._v("lighthouse score: Chrome浏览器审查工具性能评分")]),s._v(" "),a("h2",{attrs:{id:"打包优化分析工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包优化分析工具"}},[s._v("#")]),s._v(" 打包优化分析工具")]),s._v(" "),a("p",[s._v("rollup-plugin-visualizer")]),s._v(" "),a("p",[s._v("安装")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm i rollup-plugin-visualizer -D\n||\nnpm install rollup-plugin-visualizer --save-dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("引入")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 引入\nimport { visualizer } from 'rollup-plugin-visualizer';\n\n// 使用\nplugins: [visualizer()],\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("或者")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { visualizer } from 'rollup-plugin-visualizer'\nconst plugins = [vue(), visualizer()]\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("打包之后会在项目根目录生成 "),a("strong",[s._v("stats.html")]),s._v(" 文件，打开")]),s._v(" "),a("h2",{attrs:{id:"打包优化方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包优化方式"}},[s._v("#")]),s._v(" 打包优化方式")]),s._v(" "),a("h3",{attrs:{id:"图片压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片压缩"}},[s._v("#")]),s._v(" 图片压缩")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm i vite-plugin-imagemin -D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import viteImagemin from "vite-plugin-imagemin"\n\nplugins: [vue(), viteImagemin()]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("打包后会生成压缩的图片，但是每次打包都会重新压缩一遍，比较浪费时间，如果不介意的话采用此方案也很简单，网上查了一下有使用本地压缩的方案，不过配置比较繁琐，可以自己写个插件（"),a("strong",[s._v("待办")]),s._v("）")]),s._v(" "),a("h2",{attrs:{id:"gzip压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gzip压缩"}},[s._v("#")]),s._v(" gzip压缩")]),s._v(" "),a("p",[s._v("见另一篇文章")]),s._v(" "),a("h3",{attrs:{id:"大文件单独打包、按需导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大文件单独打包、按需导入"}},[s._v("#")]),s._v(" 大文件单独打包、按需导入")]),s._v(" "),a("h2",{attrs:{id:"打包优化大致优化思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包优化大致优化思路"}},[s._v("#")]),s._v(" 打包优化大致优化思路")]),s._v(" "),a("p",[s._v("执行"),a("code",[s._v("npm run build")]),s._v("命令后，项目会生成一个"),a("code",[s._v("stats.html")]),s._v("文件，在浏览器打开这个文件，即可看到项目各个模块打包大小的情况")]),s._v(" "),a("p",[s._v("主要的加载优化方向还是大体积文件瘦身（之前已经做过 "),a("strong",[s._v("gzip")]),s._v(" 的优化，如果没做过的同学强烈推荐，可以极大提升加载速度）")]),s._v(" "),a("p",[s._v("将大的文件进行单独配置")]),s._v(" "),a("h2",{attrs:{id:"同一项目不同机型不同平台如何进行打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同一项目不同机型不同平台如何进行打包"}},[s._v("#")]),s._v(" 同一项目不同机型不同平台如何进行打包？")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/7075988604224274446",target:"_blank",rel:"noopener noreferrer"}},[s._v("待看"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"打包优化能否将一直不用的代码、模块去掉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包优化能否将一直不用的代码、模块去掉"}},[s._v("#")]),s._v(" 打包优化能否将一直不用的代码、模块去掉")]),s._v(" "),a("p",[s._v("vite打包优化中有tree-shaking吗？有的")]),s._v(" "),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[s._v("#")]),s._v(" 扩展")]),s._v(" "),a("p",[s._v("gzip优化是什么？")])])}),[],!1,null,null,null);a.default=r.exports}}]);