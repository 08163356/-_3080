(window.webpackJsonp=window.webpackJsonp||[]).push([[466],{804:function(t,a,s){"use strict";s.r(a);var n=s(7),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"javascript-和-typescript-之间的主要区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-和-typescript-之间的主要区别"}},[t._v("#")]),t._v(" JavaScript 和 TypeScript 之间的主要区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("JavaScript")])]),t._v(" "),a("th",[a("strong",[t._v("TypeScript")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("支持动态网页内容")]),t._v(" "),a("td",[t._v("为帮助项目解决代码复杂性而创建的JavaScript超集")])]),t._v(" "),a("tr",[a("td",[t._v("解释性语言，因此只有在运行时才会发现错误")]),t._v(" "),a("td",[t._v("在编译期间可以检测和修复错误")])]),t._v(" "),a("tr",[a("td",[t._v("弱类型，无法选择静态类型")]),t._v(" "),a("td",[t._v("强类型，支持静态和动态类型")])]),t._v(" "),a("tr",[a("td",[t._v("可以直接在浏览器中使用")]),t._v(" "),a("td",[t._v("将代码转换为 JS 以实现浏览器兼容性")])]),t._v(" "),a("tr",[a("td",[t._v("不支持模块、泛型和接口")]),t._v(" "),a("td",[t._v("支持模块、泛型和接口")])]),t._v(" "),a("tr",[a("td",[t._v("不支持可选参数")]),t._v(" "),a("td",[t._v("可选参数可以添加到函数中")])]),t._v(" "),a("tr",[a("td",[t._v("使用数字和字符串作为接口")]),t._v(" "),a("td",[t._v("数字和字符串是对象")])]),t._v(" "),a("tr",[a("td",[t._v("大量社区支持，包括大量文档")]),t._v(" "),a("td",[t._v("社区支持正在增长，不像以前那么强大")])]),t._v(" "),a("tr",[a("td",[t._v("不支持原型设计")]),t._v(" "),a("td",[t._v("原型设计是一个可行的选择")])]),t._v(" "),a("tr",[a("td",[t._v("不需要事先的脚本知识")]),t._v(" "),a("td",[t._v("学习和编码需要时间，需要脚本知识")])]),t._v(" "),a("tr",[a("td",[t._v("无需设置构建环境")]),t._v(" "),a("td",[t._v("对于静态类型定义，需要适当地构建设置（npm 包）")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.51cto.com/article/705940.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文档（有用）"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"谁的速度更快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#谁的速度更快"}},[t._v("#")]),t._v(" 谁的速度更快")]),t._v(" "),a("p",[t._v("JS可能更快")]),t._v(" "),a("h2",{attrs:{id:"ts有什么优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts有什么优势"}},[t._v("#")]),t._v(" TS有什么优势？")]),t._v(" "),a("p",[t._v("TypeScript，是JavaScript的超集，专为开发大型网络应用程序而设计（如）。")]),t._v(" "),a("h2",{attrs:{id:"js和java等语言性能差在什么地方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js和java等语言性能差在什么地方"}},[t._v("#")]),t._v(" JS和JAVA等语言性能差在什么地方？")]),t._v(" "),a("p",[t._v("观察发现：\n1.在超大规模计算时，Java运行时间明显低于JavaScript；\n2.在小规模运算时，Java运行时间和JavaScript运行时间相差不大；\n3.Nodejs的运行时间略快于浏览器环境；\n4.不论Java或者Javascript，多次执行的代码优化都是非常明显的；\n5.Java作为强类型语言，在编程时要确保不出现运行时类型转换，否则性能将大大降低；\n6.从程序输出发现，Java每次执行时间跳动较大（有可能已经是第四次执行了，执行时间却接近第一次执行时间）。而Nodejs每次执行时间是最稳定的，除了第一次执行时间较长，之后每次执行时间几乎不变；")]),t._v(" "),a("p",[t._v("以下是对于出现这样结果的一些分析：\n1.浏览器环境下，页面程序需要处理的问题会更多，例如Javascript代码是否会引起HTML修改，这部分检查导致了浏览器环境下的代码效率注定不如纯后台的运算环境；\n2.JavaScript是弱类型语言，因此在运算数据上升时，程序会在内部执行从小值域数据类型到大值域数据类型的转换，这是一个很大的性能消耗，这个转换可以从“超大规模运算”的对比结果中看出来（JavaScript在执行超大规模运算时速度明显很慢）；\n3.同样的，如果Java程序中由于编程粗心，引入了运行时类型转换（例如整数转浮点数，本文中的calc3()函数），那对应的Java程序的性能将会大幅下降。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/yuhk231/article/details/77742864",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文链接"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"ts和js之间如何相互调用呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts和js之间如何相互调用呢"}},[t._v("#")]),t._v(" TS和JS之间如何相互调用呢？")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("JS:<script>\n\nfunction jsFun(a){\n    return a;\n}\n<\/script>\n\nTS:\nclass ImTS{\n     function tsFun(a):any{\n         return a;\n     }\n}\n\nvar imTS:ImTS = new ImTS();\nwindow['imTS'] = imTS; //这步不能少\n\nJS调用TS：\n<script>\n       window.imTS.tsFun();       \n<\/script>\n\nTS调用JS:\nwindow['jsFun']();\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("h2",{attrs:{id:"ts的常见使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts的常见使用场景"}},[t._v("#")]),t._v(" TS的常见使用场景")]),t._v(" "),a("p",[t._v("https://cloud.tencent.com/developer/news/639331")]),t._v(" "),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展：")]),t._v(" "),a("p",[t._v("vue-class-component")]),t._v(" "),a("p",[t._v("Vue Property Decorator")]),t._v(" "),a("p",[t._v("Ember.js或Glimmer.js是什么")])])}),[],!1,null,null,null);a.default=r.exports}}]);