(window.webpackJsonp=window.webpackJsonp||[]).push([[737],{1077:function(s,a,e){"use strict";e.r(a);var t=e(7),n=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"指令是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令是什么"}},[s._v("#")]),s._v(" 指令是什么？")]),s._v(" "),a("p",[s._v("是类似于v-if、v-else、v-bind、v-model等嵌入到html语句中的命令。通过他可以快捷的实现指令定义的功能。")]),s._v(" "),a("p",[s._v("因为在vue3中一个vue最终会被转换为虚拟dom，在转换的过程中，指令实际上被放在了一个数组中，在被触发的时候通过遍历的方式去获取指令对应的方法进行调用。因此指令的编写实际上等同于函数的编写，就是需要遵循的是vue的一些语法。")]),s._v(" "),a("h2",{attrs:{id:"指令在性能优化中能起到什么作用吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令在性能优化中能起到什么作用吗"}},[s._v("#")]),s._v(" 指令在性能优化中能起到什么作用吗？")]),s._v(" "),a("h3",{attrs:{id:"vue3-2新增指令v-memo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3-2新增指令v-memo"}},[s._v("#")]),s._v(" vue3.2新增指令v-memo")]),s._v(" "),a("p",[s._v("作用")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\x3c!-- more --\x3e\n\nv-memo:可以做性能优化，v-memo中值若不发生变化，整个子树的更新会被跳过。\n<div v-memo="[valueA, valueB]">\n  ...\n</div>\n当组件重新渲染的时候，如果 valueA 与 valueB 都维持不变。\n那么对这个 <div> 以及它的所有子节点的更新都将被跳过。\n事实上，即使是虚拟 DOM 的 VNode 创建也将被跳过，因为子树的记忆副本可以被重用。通过该方法就能进行性能提升\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("使用场景")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("对于数据更新的场景\n当后端返回大量的数据时，选出符合条件的数据进行展示，不符合条件的则不进行改变\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"v-once-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-once-指令"}},[s._v("#")]),s._v(" v-once 指令")]),s._v(" "),a("p",[s._v("说明:v-once 用于指定元素或者组件只渲染一次;当数据发生变化时，元素或者组件以及其所有的子元素将视为静态内容并且跳过；该指令可以用于性能优化；")]),s._v(" "),a("h2",{attrs:{id:"如何自定义指令进行性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何自定义指令进行性能优化"}},[s._v("#")]),s._v(" 如何自定义指令进行性能优化")]),s._v(" "),a("p",[s._v("图片、组件等懒加载v-lazy")]),s._v(" "),a("p",[s._v("需要具体的场景")])])}),[],!1,null,null,null);a.default=n.exports}}]);