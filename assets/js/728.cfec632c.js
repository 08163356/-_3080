(window.webpackJsonp=window.webpackJsonp||[]).push([[728],{1066:function(s,n,a){"use strict";a.r(n);var t=a(7),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("在Chrome开发者工具中，Layers面板用于显示页面的图层结构。当选择某个图层时，可以在右侧的Details面板中查看该图层的详细信息。以下是Details面板中各个部分的含义：\n\n1. Layer：显示图层的名称和ID。\n\n2. Position：显示图层在页面中的位置和大小。\n\n3. Scroll：显示图层的滚动状态，包括滚动位置和滚动方向。\n\n4. Compositing：显示图层的合成方式，包括是否开启硬件加速、是否开启混合模式等。\n\n5. Paints：显示图层的绘制信息，包括绘制次数、绘制时间等。\n\n\x3c!-- more --\x3e\n\n6. Memory：显示图层占用的内存大小。\n\n7. Metrics：显示图层的一些指标，包括绘制时间、合成时间、GPU时间等。\n\n通过查看Details面板中的信息，可以更好地了解页面的图层结构和性能状况，从而进行优化和调整。需要注意的是，Details面板中的信息可能会因具体情况而异，例如设备性能、页面大小、图层结构等因素都会影响信息的呈现和含义。因此，在使用Details面板时，应该结合其他工具和指标进行综合分析和评估。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("devtool中layers中的如下detail信息含义是什么")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Size、Compositing Reasons、Memory estimate 、Paint count、Slow scroll、regions、Sticky position constraint\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("在Chrome开发者工具中，Layers面板用于显示页面的图层结构。当选择某个图层时，可以在右侧的Details面板中查看该图层的详细信息。以下是Details面板中各个部分的含义：\n\n1. Size：显示图层的尺寸，包括宽度和高度。\n\n2. Compositing Reasons：显示图层被创建的原因，例如是否是由于CSS动画、JavaScript代码等创建的。\n\n3. Memory estimate：显示图层占用内存的估计值。\n\n4. Paint count：显示图层的绘制次数。\n\n5. Slow：显示图层的绘制是否较慢。\n\n6. Scroll：显示图层的滚动状态，包括滚动位置和滚动方向。\n\n7. Regions：显示图层的区域，包括可滚动区域、可点击区域等。\n\n8. Sticky：显示图层是否为sticky元素。\n\n9. Position：显示图层在页面中的位置和大小。\n\n10. Constraint：显示图层的约束条件，例如是否有最小宽度、最大宽度等。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("devtool中layers中的detail信息Paint count为0和不为0对性能是否有影响")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("在Chrome开发者工具中，Layers面板中的Paint Count表示一个图层的绘制次数。如果一个图层的Paint Count为0，表示该图层没有被绘制过，即该图层没有发生过变化，或者该图层被缓存了。如果一个图层的Paint Count不为0，表示该图层被绘制了多次，即该图层发生了变化。\n\n从性能的角度来看，一个图层的Paint Count为0或不为0并不是绝对的好坏之分，而是需要结合具体情况进行分析和评估。具体来说，如果一个图层的Paint Count为0，表示该图层没有发生变化，这是一种优化，可以减少浏览器的重绘和重排操作，从而提高页面的性能。但是，如果一个图层的Paint Count不为0，表示该图层发生了变化，这可能会导致浏览器进行重绘和重排操作，从而影响页面的性能。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("devtool中layers中没有Paint count这个detail信息是因为什么")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("在Chrome开发者工具中，Layers面板中的Paint Count是用于显示一个图层被绘制的次数。如果在Layers面板中没有看到Paint Count这个detail信息，可能是因为以下原因：\n\n1. 图层没有被绘制：如果一个图层没有被绘制，即没有发生变化，那么在Layers面板中就不会显示Paint Count这个detail信息。\n\n2. 浏览器版本不支持：如果使用的是较旧的Chrome浏览器版本，可能不支持显示Paint Count这个detail信息。\n\n3. 图层结构复杂：如果页面中的图层结构非常复杂，可能会导致Layers面板中的detail信息不完整或不准确，包括Paint Count这个detail信息。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);