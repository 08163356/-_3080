(window.webpackJsonp=window.webpackJsonp||[]).push([[738],{1075:function(t,e,s){"use strict";s.r(e);var o=s(7),i=Object(o.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[this._v("性能优化思路")]),this._v(" "),t("p",[this._v("1.找出首次页面渲染、页面内操作的瓶颈性能（用devtools、vue devtools、benchmark.js等工具） 2.分析瓶颈性能可能的原因（一般是JS代码优化、渲染速度优化） 3.针对性的优化逻辑、减少循环、减少渲染、进行缓存（keepalive）、单线程变多线程（webworker）、对象冻结（object.freeze）")]),this._v(" "),t("p",[this._v("问题")]),this._v(" "),t("p",[this._v("1.如果测试出来发现某个地方慢了点咋办")])])}),[],!1,null,null,null);e.default=i.exports}}]);