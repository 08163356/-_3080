(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{494:function(t,n,s){"use strict";s.r(n);var r=s(7),a=Object(r.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h4",{attrs:{id:"全局变量的缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局变量的缺点"}},[t._v("#")]),t._v(" 全局变量的缺点：")]),t._v(" "),n("p",[n("strong",[t._v("长期占用内存")]),t._v("：全局变量生命周期长，程序运行期一直存在，始终占有那块存储区；\n"),n("strong",[t._v("难以定位修改")]),t._v("：全局变量是公共的，全部函数都可以访问，难以定位全局变量在哪里被修改，加大了调试的难度；\n"),n("strong",[t._v("使函数难以理解")]),t._v("：使用全局变量的函数，需要关注全局变量的值，增加了理解的难度，增加了耦合性；\n"),n("strong",[t._v("初始化顺序")]),t._v("：全局变量的初始化顺序不定，如果全局变量之间有依赖，有可能导致某些变量初始化失败呢，引起莫名其妙bug。\n"),n("strong",[t._v("污染命名空间")]),t._v("：全局变量会污染命名空间，在函数中局部变量会覆盖全局的值，会出现同一个变量名多个值的情况，造成困惑；\n"),n("strong",[t._v("增加耦合性")]),t._v("：修改全部变量会影响所有用到它的模块，不利于调试；\n"),n("strong",[t._v("线程不安全")]),t._v("：多线程中多全局变量的修改容易冲突，需要加锁；")]),t._v(" "),n("h4",{attrs:{id:"什么时候可以用全局变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么时候可以用全局变量"}},[t._v("#")]),t._v(" 什么时候可以用全局变量")])])}),[],!1,null,null,null);n.default=a.exports}}]);