(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{459:function(s,n,a){"use strict";a.r(n);var e=a(7),i=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"一、学前思考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、学前思考"}},[s._v("#")]),s._v(" 一、学前思考")]),s._v(" "),n("p",[s._v("1.去银行办理业务得时候任意一个窗口都能办理业务")]),s._v(" "),n("p",[s._v("2.实际上就是将数据结构和数据操作解耦")]),s._v(" "),n("p",[s._v("3.这个模式用得比较少，水至清则无鱼（条件太苛刻），但是一旦用上整个结构都会被visitor模式所绑架。")]),s._v(" "),n("h3",{attrs:{id:"二、行为变化模式之visitor-访问器模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、行为变化模式之visitor-访问器模式"}},[s._v("#")]),s._v(" 二、行为变化模式之Visitor（访问器模式）")]),s._v(" "),n("p",[s._v("原始问题代码：")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\nclass Visitor;\nclass Element\n\x3c!-- more --\x3e\n{\npublic:\n    virtual void Func1()=0;\n    virtual ~Element(){};\n    //#以上是已有得操作（暗含已经开发完成并且部署分发之后），当需要有一个新的操作Func2（）时\n    virtual void Func2（int date）=0；\n};\n\nclass ElementA : public Element\n{\n    public:\n    void Func1() override{\n        //...\n    }\n    //#新添加\n    void Func2(int date) override{\n        //...\n    }\n}；\n    \nclass ElementB : public Element\n{\n    public:\n    void Func1() override{\n        //***\n    }\n    //#新添加\n    void Func2(int date) override{\n        //...\n    }\n}；\n    \n//违背开闭原则\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("h4",{attrs:{id:"_1-动机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-动机"}},[s._v("#")]),s._v(" 1.动机")]),s._v(" "),n("p",[s._v("在软件构建过程中，由于需求得改变，某些类层次结构中常常需要增加新的方法（行为），如果直接在基类中做这样得更改，将会给子类带来很沉重得变更负担，甚至破坏原有涉及。")]),s._v(" "),n("p",[s._v("访问器模式就是要解决如何在不更改类层次结构得前提下，在运行时根据需要透明底为类层次结构上得各个类结构动态添加新的操作。")]),s._v(" "),n("h4",{attrs:{id:"_2-模式定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-模式定义"}},[s._v("#")]),s._v(" 2.模式定义")]),s._v(" "),n("p",[s._v("表示一个作用于某对象结构中的个元素的操作。使得可以在不改变（稳定）各元素的类的前提下定义（扩展）作用于这些元素的新操作（变化）。")]),s._v(" "),n("p",[s._v("理解：这里的不改变指的是编译时不改变。已有的元素是固定的，但是使用的方法不同。如果子类个数（意思子类必须稳定）不确定那么这个模式就没法使用。")]),s._v(" "),n("p",[s._v("解决存在问题的代码：")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <iostream>\nusing namespace std;\nclass Visitor;\nclass Element\n{\n    public:\n    //提前假设这个类需要添加新的需求\n    virtual void accept(Visitor& visitor)=0;\n    virtual ~Element(){}\n};\n\nclass ElementA : public Element\n{\n    public:\n    void accept(Visitor& visitor) override{\n        visitor.visitElementA(*this);\n    }\n};\n\nclass ElementB : public Element\n{\n    public:\n    void accept(Visitor& visitor) override{\n        visitor.visitElementB(*this);\n    }\n};\n\nclass Visitor\n{\n    public:\n    virtual void visitElementA(ElementA& element)=0;\n    virtual void visitElementB(ElementB& element)=0;\n    virtual ~Visitor(){}\n};\n//以上是已有得操作（暗含已经开发完成并且部署分发之后），当有一个新的需求变更时如下\nclass Visitor1 : public Visitor{\n    public:\n    void visitElementA(ElementA& element) override{\n        cout<<"Visitor1 is processing ElementA"<<endl;\n    }\n    void visitElementB(ElementB& element) override{\n        cout<<"Visitor1 is processing ElementB"<<endl;\n    }\n};\n//再次出现新的需求\nclass Visitor2 : public Visitor{\n    public:\n    void visitElementA(ElementA& element) override{\n        cout<<"Visitor2 is processing ElementA"<<endl;\n    }\n    void visitElementB(ElementB& element) override{\n        cout<<"Visitor2 is processing ElementB"<<endl;\n    }\n};\n//主函数调用\nint main()\n{\n    Visitor2 visitor;\n    ElementB element;\n    element.accept(visitor);//double dispatch，多态的二次辨析\n    \n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br")])]),n("h4",{attrs:{id:"_3-要点总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-要点总结"}},[s._v("#")]),s._v(" 3.要点总结")]),s._v(" "),n("ul",[n("li",[s._v("Visitor模式通过所谓双重分发（double dispatch）来实现在不更改（（编译时）不添加新的操作）Element类层次结构的前提下，在运行时透明地位类层次结构上的各个类动态添加新的操作（支持变化）。")]),s._v(" "),n("li",[s._v("双重分发即Visitor模式中包括了两个多态分发（注意其中的多态机制）：第一个位accept方法的多态辨析；第二个位visitElementX方法的多态辨析。")]),s._v(" "),n("li",[s._v("Visitor模式的最大缺点在于扩展类层次结构（添加新的Element子类），会导致 Visitor了的改变。因此"),n("u",[s._v("Visitor模式适用于”Element类层次稳定，而其中的操作却经常面临频繁改动“")])]),s._v(" "),n("li",[s._v("软件中有稳定的有变化的部分，设计模式就是解决变化的部分。如果极端情况下，比如全是稳定的，或者全是变化的，设计模式没有变法解决这样的问题。")])])])}),[],!1,null,null,null);n.default=i.exports}}]);